.grid {
  overflow: hidden;
  padding: 0 0 0 0.5em;
  max-width: 95vw;
  margin: 0 auto 20px auto;
  list-style: none;
}
.grid li {
  padding: 0;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}
    .grid li img {
        display: block;
        object-fit: cover;
        width: 100%;
        height: 100%;
    }
.grid li > figure,
.grid li > div,
.grid li > h2 {
  background: #808080;
  color: #fff;
  text-align: center;
  margin: 0;
}
.grid li.title h2 {
  padding: 1em;
  width: 100%;
}
.grid li.title h2::after {
  --hhh: calc(1px * 1vw);
  content: var(--hhh);
}
.grid li a {
  color: #fff;
}
.grid li:focus-within {
  border: 1px solid red;
}
@media all and (min-width: 500px) {
  .grid li {
    float: left;
    width: 33.3333333%;
  }
  .grid li.title {
    width: 100%;
  }
}
.grid h2 {
  font-size: 100%;
}
.producto {
  height: 100%;
  position: relative;
}
.producto details {
  position: absolute;
  top: 1em;
  left: 0px;
  bottom: 0px;
  right: 0px;
  color: white;
  background-color: rgba(209, 115, 115, 0.048);
  font-size: 0.7em;
}
.producto details summary{
    font-size: 1rem;
}
.producto details[open] {
  position: absolute;
  top: 1em;
  left: 0px;
  bottom: 0px;
  right: 0px;
  background-color: rgba(70, 42, 42, 0.815);
}
@media all and (min-width: 500px) {
  .grid li {
    float: left;
    width: 33.3333333%;
  }
  .grid li.title {
    width: 100%;
  }
}
@media all and (min-width: 60em) {
  .grid li {
    width: 25%;
  }
  .grid li.title {
    width: 25%;
    clear: left;
  }
  .grid li.title h2 {
    width: 100%;
  }
}
/* for flexbox */
@supports (display: flex) {
  @media all and (min-width: 500px) {
    .grid {
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap;
    }
    .grid li {
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-orient: vertical;
      -webkit-box-direction: normal;
          -ms-flex-direction: column;
              flex-direction: column;
    }
    /* the original pattern and therefore our fallback styles uses padding on the li and then puts the background color on the inner element. We can't therefor make it stretch just by way of the default alignment of the flex item. By setting the li to a flex column we can then make the inner grow to the height of the external container.  */
    .grid li > * {
      -webkit-box-flex: 1;
          -ms-flex: 1;
              flex: 1;
    }
  }
}
/* for grid */
@supports (display: grid) {
  @media all and (min-width: 500px) {
    .grid {
      display: grid;
      grid-gap: 15px;
      padding-right: 10px;
      grid-template-columns: repeat(3, 1fr);
    }
    .grid li {
      padding: 0;
      display: block;
      background: rgba(255, 0, 234, 0.73);
      float: none;
      width: auto;
    }
    .grid li.title {
      width: auto;
      grid-column: 1 / 4;
    }
  }
  @media all and (min-width: 1200px) {
    .grid {
        grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
        grid-template-columns: repeat(4, minmax(120px, 1fr));
    }
    .grid li {
      width: auto;
    }
    .grid li.title {
      grid-column: 1 / 2;
    }
  }
}
/*# sourceMappingURL=depo.css.map */